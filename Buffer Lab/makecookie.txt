
makecookie：     文件格式 elf32-i386


Disassembly of section .init:

08048310 <_init>:
 8048310:	53                   	push   %ebx
 8048311:	83 ec 08             	sub    $0x8,%esp
 8048314:	e8 00 00 00 00       	call   8048319 <_init+0x9>
 8048319:	5b                   	pop    %ebx
 804831a:	81 c3 db 1c 00 00    	add    $0x1cdb,%ebx
 8048320:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048326:	85 c0                	test   %eax,%eax
 8048328:	74 05                	je     804832f <_init+0x1f>
 804832a:	e8 21 00 00 00       	call   8048350 <__gmon_start__@plt>
 804832f:	83 c4 08             	add    $0x8,%esp
 8048332:	5b                   	pop    %ebx
 8048333:	c3                   	ret    

Disassembly of section .plt:

08048340 <.plt>:
 8048340:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048346:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804834c:	00 00                	add    %al,(%eax)
	...

08048350 <__gmon_start__@plt>:
 8048350:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048356:	68 00 00 00 00       	push   $0x0
 804835b:	e9 e0 ff ff ff       	jmp    8048340 <.plt>

08048360 <srand@plt>:
 8048360:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048366:	68 08 00 00 00       	push   $0x8
 804836b:	e9 d0 ff ff ff       	jmp    8048340 <.plt>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048376:	68 10 00 00 00       	push   $0x10
 804837b:	e9 c0 ff ff ff       	jmp    8048340 <.plt>

08048380 <rand@plt>:
 8048380:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048386:	68 18 00 00 00       	push   $0x18
 804838b:	e9 b0 ff ff ff       	jmp    8048340 <.plt>

08048390 <__printf_chk@plt>:
 8048390:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048396:	68 20 00 00 00       	push   $0x20
 804839b:	e9 a0 ff ff ff       	jmp    8048340 <.plt>

Disassembly of section .text:

080483a0 <_start>:
 80483a0:	31 ed                	xor    %ebp,%ebp
 80483a2:	5e                   	pop    %esi
 80483a3:	89 e1                	mov    %esp,%ecx
 80483a5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483a8:	50                   	push   %eax
 80483a9:	54                   	push   %esp
 80483aa:	52                   	push   %edx
 80483ab:	68 00 86 04 08       	push   $0x8048600
 80483b0:	68 90 85 04 08       	push   $0x8048590
 80483b5:	51                   	push   %ecx
 80483b6:	56                   	push   %esi
 80483b7:	68 90 84 04 08       	push   $0x8048490
 80483bc:	e8 af ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483c1:	f4                   	hlt    
 80483c2:	90                   	nop
 80483c3:	90                   	nop
 80483c4:	90                   	nop
 80483c5:	90                   	nop
 80483c6:	90                   	nop
 80483c7:	90                   	nop
 80483c8:	90                   	nop
 80483c9:	90                   	nop
 80483ca:	90                   	nop
 80483cb:	90                   	nop
 80483cc:	90                   	nop
 80483cd:	90                   	nop
 80483ce:	90                   	nop
 80483cf:	90                   	nop

080483d0 <deregister_tm_clones>:
 80483d0:	b8 1f a0 04 08       	mov    $0x804a01f,%eax
 80483d5:	2d 1c a0 04 08       	sub    $0x804a01c,%eax
 80483da:	83 f8 06             	cmp    $0x6,%eax
 80483dd:	77 01                	ja     80483e0 <deregister_tm_clones+0x10>
 80483df:	c3                   	ret    
 80483e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80483e5:	85 c0                	test   %eax,%eax
 80483e7:	74 f6                	je     80483df <deregister_tm_clones+0xf>
 80483e9:	55                   	push   %ebp
 80483ea:	89 e5                	mov    %esp,%ebp
 80483ec:	83 ec 18             	sub    $0x18,%esp
 80483ef:	c7 04 24 1c a0 04 08 	movl   $0x804a01c,(%esp)
 80483f6:	ff d0                	call   *%eax
 80483f8:	c9                   	leave  
 80483f9:	c3                   	ret    
 80483fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048400 <register_tm_clones>:
 8048400:	b8 1c a0 04 08       	mov    $0x804a01c,%eax
 8048405:	2d 1c a0 04 08       	sub    $0x804a01c,%eax
 804840a:	c1 f8 02             	sar    $0x2,%eax
 804840d:	89 c2                	mov    %eax,%edx
 804840f:	c1 ea 1f             	shr    $0x1f,%edx
 8048412:	01 d0                	add    %edx,%eax
 8048414:	d1 f8                	sar    %eax
 8048416:	75 01                	jne    8048419 <register_tm_clones+0x19>
 8048418:	c3                   	ret    
 8048419:	ba 00 00 00 00       	mov    $0x0,%edx
 804841e:	85 d2                	test   %edx,%edx
 8048420:	74 f6                	je     8048418 <register_tm_clones+0x18>
 8048422:	55                   	push   %ebp
 8048423:	89 e5                	mov    %esp,%ebp
 8048425:	83 ec 18             	sub    $0x18,%esp
 8048428:	89 44 24 04          	mov    %eax,0x4(%esp)
 804842c:	c7 04 24 1c a0 04 08 	movl   $0x804a01c,(%esp)
 8048433:	ff d2                	call   *%edx
 8048435:	c9                   	leave  
 8048436:	c3                   	ret    
 8048437:	89 f6                	mov    %esi,%esi
 8048439:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048440 <__do_global_dtors_aux>:
 8048440:	80 3d 1c a0 04 08 00 	cmpb   $0x0,0x804a01c
 8048447:	75 13                	jne    804845c <__do_global_dtors_aux+0x1c>
 8048449:	55                   	push   %ebp
 804844a:	89 e5                	mov    %esp,%ebp
 804844c:	83 ec 08             	sub    $0x8,%esp
 804844f:	e8 7c ff ff ff       	call   80483d0 <deregister_tm_clones>
 8048454:	c6 05 1c a0 04 08 01 	movb   $0x1,0x804a01c
 804845b:	c9                   	leave  
 804845c:	f3 c3                	repz ret 
 804845e:	66 90                	xchg   %ax,%ax

08048460 <frame_dummy>:
 8048460:	a1 04 9f 04 08       	mov    0x8049f04,%eax
 8048465:	85 c0                	test   %eax,%eax
 8048467:	74 1f                	je     8048488 <frame_dummy+0x28>
 8048469:	b8 00 00 00 00       	mov    $0x0,%eax
 804846e:	85 c0                	test   %eax,%eax
 8048470:	74 16                	je     8048488 <frame_dummy+0x28>
 8048472:	55                   	push   %ebp
 8048473:	89 e5                	mov    %esp,%ebp
 8048475:	83 ec 18             	sub    $0x18,%esp
 8048478:	c7 04 24 04 9f 04 08 	movl   $0x8049f04,(%esp)
 804847f:	ff d0                	call   *%eax
 8048481:	c9                   	leave  
 8048482:	e9 79 ff ff ff       	jmp    8048400 <register_tm_clones>
 8048487:	90                   	nop
 8048488:	e9 73 ff ff ff       	jmp    8048400 <register_tm_clones>
 804848d:	90                   	nop
 804848e:	90                   	nop
 804848f:	90                   	nop

08048490 <main>:
 8048490:	55                   	push   %ebp
 8048491:	89 e5                	mov    %esp,%ebp
 8048493:	57                   	push   %edi
 8048494:	56                   	push   %esi
 8048495:	53                   	push   %ebx
 8048496:	83 e4 f0             	and    $0xfffffff0,%esp
 8048499:	83 ec 10             	sub    $0x10,%esp
 804849c:	8b 75 08             	mov    0x8(%ebp),%esi
 804849f:	8b 7d 0c             	mov    0xc(%ebp),%edi
 80484a2:	83 fe 01             	cmp    $0x1,%esi
 80484a5:	7e 2f                	jle    80484d6 <main+0x46>
 80484a7:	bb 01 00 00 00       	mov    $0x1,%ebx
 80484ac:	8b 04 9f             	mov    (%edi,%ebx,4),%eax
 80484af:	89 04 24             	mov    %eax,(%esp)
 80484b2:	e8 a4 00 00 00       	call   804855b <gencookie>
 80484b7:	89 44 24 08          	mov    %eax,0x8(%esp)
 80484bb:	c7 44 24 04 28 86 04 	movl   $0x8048628,0x4(%esp)
 80484c2:	08 
 80484c3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80484ca:	e8 c1 fe ff ff       	call   8048390 <__printf_chk@plt>
 80484cf:	83 c3 01             	add    $0x1,%ebx
 80484d2:	39 f3                	cmp    %esi,%ebx
 80484d4:	75 d6                	jne    80484ac <main+0x1c>
 80484d6:	b8 00 00 00 00       	mov    $0x0,%eax
 80484db:	8d 65 f4             	lea    -0xc(%ebp),%esp
 80484de:	5b                   	pop    %ebx
 80484df:	5e                   	pop    %esi
 80484e0:	5f                   	pop    %edi
 80484e1:	5d                   	pop    %ebp
 80484e2:	c3                   	ret    
 80484e3:	90                   	nop
 80484e4:	90                   	nop
 80484e5:	90                   	nop
 80484e6:	90                   	nop
 80484e7:	90                   	nop
 80484e8:	90                   	nop
 80484e9:	90                   	nop
 80484ea:	90                   	nop
 80484eb:	90                   	nop
 80484ec:	90                   	nop
 80484ed:	90                   	nop
 80484ee:	90                   	nop
 80484ef:	90                   	nop

080484f0 <hash>:
 80484f0:	8b 4c 24 04          	mov    0x4(%esp),%ecx
 80484f4:	0f b6 11             	movzbl (%ecx),%edx
 80484f7:	84 d2                	test   %dl,%dl
 80484f9:	74 19                	je     8048514 <hash+0x24>
 80484fb:	b8 00 00 00 00       	mov    $0x0,%eax
 8048500:	6b c0 67             	imul   $0x67,%eax,%eax
 8048503:	83 c1 01             	add    $0x1,%ecx
 8048506:	0f be d2             	movsbl %dl,%edx
 8048509:	01 d0                	add    %edx,%eax
 804850b:	0f b6 11             	movzbl (%ecx),%edx
 804850e:	84 d2                	test   %dl,%dl
 8048510:	75 ee                	jne    8048500 <hash+0x10>
 8048512:	f3 c3                	repz ret 
 8048514:	b8 00 00 00 00       	mov    $0x0,%eax
 8048519:	c3                   	ret    

0804851a <check>:
 804851a:	8b 54 24 04          	mov    0x4(%esp),%edx
 804851e:	89 d1                	mov    %edx,%ecx
 8048520:	c1 e9 1c             	shr    $0x1c,%ecx
 8048523:	b8 00 00 00 00       	mov    $0x0,%eax
 8048528:	85 c9                	test   %ecx,%ecx
 804852a:	74 2d                	je     8048559 <check+0x3f>
 804852c:	80 fa 0a             	cmp    $0xa,%dl
 804852f:	74 17                	je     8048548 <check+0x2e>
 8048531:	b9 08 00 00 00       	mov    $0x8,%ecx
 8048536:	89 d0                	mov    %edx,%eax
 8048538:	d3 e8                	shr    %cl,%eax
 804853a:	3c 0a                	cmp    $0xa,%al
 804853c:	74 10                	je     804854e <check+0x34>
 804853e:	83 c1 08             	add    $0x8,%ecx
 8048541:	83 f9 20             	cmp    $0x20,%ecx
 8048544:	75 f0                	jne    8048536 <check+0x1c>
 8048546:	eb 0c                	jmp    8048554 <check+0x3a>
 8048548:	b8 00 00 00 00       	mov    $0x0,%eax
 804854d:	c3                   	ret    
 804854e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048553:	c3                   	ret    
 8048554:	b8 01 00 00 00       	mov    $0x1,%eax
 8048559:	f3 c3                	repz ret 

0804855b <gencookie>:
 804855b:	53                   	push   %ebx
 804855c:	83 ec 18             	sub    $0x18,%esp
 804855f:	8b 44 24 20          	mov    0x20(%esp),%eax
 8048563:	89 04 24             	mov    %eax,(%esp)
 8048566:	e8 85 ff ff ff       	call   80484f0 <hash>
 804856b:	89 04 24             	mov    %eax,(%esp)
 804856e:	e8 ed fd ff ff       	call   8048360 <srand@plt>
 8048573:	e8 08 fe ff ff       	call   8048380 <rand@plt>
 8048578:	89 c3                	mov    %eax,%ebx
 804857a:	89 04 24             	mov    %eax,(%esp)
 804857d:	e8 98 ff ff ff       	call   804851a <check>
 8048582:	85 c0                	test   %eax,%eax
 8048584:	74 ed                	je     8048573 <gencookie+0x18>
 8048586:	89 d8                	mov    %ebx,%eax
 8048588:	83 c4 18             	add    $0x18,%esp
 804858b:	5b                   	pop    %ebx
 804858c:	c3                   	ret    
 804858d:	90                   	nop
 804858e:	90                   	nop
 804858f:	90                   	nop

08048590 <__libc_csu_init>:
 8048590:	55                   	push   %ebp
 8048591:	57                   	push   %edi
 8048592:	56                   	push   %esi
 8048593:	53                   	push   %ebx
 8048594:	e8 69 00 00 00       	call   8048602 <__i686.get_pc_thunk.bx>
 8048599:	81 c3 5b 1a 00 00    	add    $0x1a5b,%ebx
 804859f:	83 ec 1c             	sub    $0x1c,%esp
 80485a2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80485a6:	8d bb 0c ff ff ff    	lea    -0xf4(%ebx),%edi
 80485ac:	e8 5f fd ff ff       	call   8048310 <_init>
 80485b1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80485b7:	29 c7                	sub    %eax,%edi
 80485b9:	c1 ff 02             	sar    $0x2,%edi
 80485bc:	85 ff                	test   %edi,%edi
 80485be:	74 29                	je     80485e9 <__libc_csu_init+0x59>
 80485c0:	31 f6                	xor    %esi,%esi
 80485c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80485c8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80485cc:	89 2c 24             	mov    %ebp,(%esp)
 80485cf:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485d3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80485d7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485db:	ff 94 b3 08 ff ff ff 	call   *-0xf8(%ebx,%esi,4)
 80485e2:	83 c6 01             	add    $0x1,%esi
 80485e5:	39 fe                	cmp    %edi,%esi
 80485e7:	75 df                	jne    80485c8 <__libc_csu_init+0x38>
 80485e9:	83 c4 1c             	add    $0x1c,%esp
 80485ec:	5b                   	pop    %ebx
 80485ed:	5e                   	pop    %esi
 80485ee:	5f                   	pop    %edi
 80485ef:	5d                   	pop    %ebp
 80485f0:	c3                   	ret    
 80485f1:	eb 0d                	jmp    8048600 <__libc_csu_fini>
 80485f3:	90                   	nop
 80485f4:	90                   	nop
 80485f5:	90                   	nop
 80485f6:	90                   	nop
 80485f7:	90                   	nop
 80485f8:	90                   	nop
 80485f9:	90                   	nop
 80485fa:	90                   	nop
 80485fb:	90                   	nop
 80485fc:	90                   	nop
 80485fd:	90                   	nop
 80485fe:	90                   	nop
 80485ff:	90                   	nop

08048600 <__libc_csu_fini>:
 8048600:	f3 c3                	repz ret 

08048602 <__i686.get_pc_thunk.bx>:
 8048602:	8b 1c 24             	mov    (%esp),%ebx
 8048605:	c3                   	ret    
 8048606:	90                   	nop
 8048607:	90                   	nop

Disassembly of section .fini:

08048608 <_fini>:
 8048608:	53                   	push   %ebx
 8048609:	83 ec 08             	sub    $0x8,%esp
 804860c:	e8 00 00 00 00       	call   8048611 <_fini+0x9>
 8048611:	5b                   	pop    %ebx
 8048612:	81 c3 e3 19 00 00    	add    $0x19e3,%ebx
 8048618:	83 c4 08             	add    $0x8,%esp
 804861b:	5b                   	pop    %ebx
 804861c:	c3                   	ret    
